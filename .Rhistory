mrcars
mtcars
library("mboost")
library("rpart")
data("bodyfat", package = "mboost")
bodyfat_rpart <- rpart(DEXfat ~ age + waistcirc + hipcirc +
elbowbreadth + kneebreadth, data = bodyfat,
control = rpart.control(minsplit = 10))
library("partykit")
plot(as.party(bodyfat_rpart), tp_args = list(id = false))
plot(as.party(bodyfat_rpart), tp_args = list(id = FALSE))
print(bodyfat_rpart$cptable)
opt <- which.min(bodyfat_rpart$cptable[,"xerror"])
opt
cp <- bodyfat_rpart$cptable[opt,"CP"]
cp
bodyfat_prune <- prune(bodyfat, cp=cp)
plot(as.part(bodyfat_prune), tp_args = list(id = FALSE))
cp <- bodyfat_rpart$cptable[opt,"CP"]
bodyfat_prune <- prune(bodyfat, cp=cp)
cp <- bodyfat_rpart$cptable[opt,"CP"]
bodyfat_prune <- prune(bodyfat_rpart, cp=cp)
plot(as.part(bodyfat_prune), tp_args = list(id = FALSE))
plot(as.party(bodyfat_prune), tp_args = list(id = FALSE))
plot(as.party(bodyfat_prune), tp_args = list(id = FALSE))
set.seed(290875)
DEXfat_pred <- predict(bodyfat_prune, newdata = bodyfat)
xlim <- range(bodyfat$DEXfat)
plot(DEXfat_pred ~ DEXfat, data = bodyfat, xlab = "Observed",
ylab = "Predicted",
ylim = xlim,
xlim = xlim )
abline(a = 0, b = 1)
bodyfat_ctree <- ctree(DEXfat ~ age + waistcirc + hipcirc +
elbowbreadth + kneebreadth, data = bodyfat)
library("party")
bodyfat_ctree <- ctree(DEXfat ~ age + waistcirc + hipcirc +
elbowbreadth + kneebreadth, data = bodyfat)
install.packages("party")
library("party")
bodyfat_ctree <- ctree(DEXfat ~ age + waistcirc + hipcirc +
elbowbreadth + kneebreadth, data = bodyfat)
ctree
bodyfat_ctree <- ctree(DEXfat ~ age + waistcirc + hipcirc +
elbowbreadth + kneebreadth, data = bodyfat)
plot(bodyfat_ctree)
readJPEG("jeff.jpg", native=TRUE)
library(jpeg)
readJPEG("jeff.jpg", native=TRUE)
setwd("~/Documents/Coursera/dataScienceSpecialisation/gettingAndCleaningData")
readJPEG("jeff.jpg", native=TRUE)
dir9)
dir()
readJPEG(system.file("img","jeff.jpg", package="jpeg"), native=TRUE)
img <- readJPEG(system.file("img","jeff.jpg", package="jpeg"), native=TRUE)
img <- readJPEG(system.file("img","jeff.jpg", package="jpeg"), native=TRUE)
img <- readJPEG(system.file("img","jeff.jpg", package="jpeg"), native=TRUE)
library(jpeg)
img <- readJPEG(system.file("img","getdata-jeff.jpg", package="jpeg"), native=TRUE)
img <- readJPEG("getdata-jeff.jpg", native=TRUE)
quantile(img, probs=seq(0.3, 0.8), rm.na=TRUE)
?quantile
quantile(img, probs=c(0.3, 0.8), rm.na=TRUE)
quantile(img, probs=c(0.3, 0.8), rm.na=FALSE)
x <- read.csv("GDP.csv")
y <- read.csv("EDSTATS_Country.csv")
head(x)
head(y)
names(x)
names(y)
head(x)
x <- read.csv("GDP.csv")
head(x)
head(y)
merge(x,y, by.x="Shortcode", by.y="CountryCode", all=TRUE)
m <- merge(x,y, by.x="Shortcode", by.y="CountryCode", all=TRUE)
intersect(x,y)
intersect(x$Shortcode, y$CountryCode)
length(intersect(x$Shortcode, y$CountryCode))
x <- read.csv("GDP.csv")
y <- read.csv("EDSTATS_Country.csv")
length(intersect(x$Shortcode, y$CountryCode))
names(m)
sort(m, GDP,decending=TRUE)
sort(m, m$GDP,decending=TRUE)
sort(m, m$GDP,decreasing=TRUE)
head(m$GPD)
head(m$GDP)
head(m$GDP)
head(x$GDP)
s <- sort(m, m$GDP,decreasing=TRUE)
head(m)
?sort
s <- sort(m, m$GDP,decreasing=TRUE, na.last=TRUE)
completeCases(m$GDP)
complete.cases(m$GDP)
m[complete.cases(m$GDP)]
m[complete.cases(m$GDP), ]
c <- m[complete.cases(m$GDP), ]
c
head(c)
m[complete.cases(m$GDP)==TRUE, ]
c <- m[complete.cases(m$GDP)==TRUE, ]
head(c)
complete.cases(m$GDP)
c <- m[complete.cases(m$GDP)==TRUE, ]
s <- sort(c, c$GDP,decreasing=TRUE)
nrow(y)
nrow(x)
x <- read.csv("GDP.csv")
y <- read.csv("EDSTATS_Country.csv")
length(intersect(x$Shortcode, y$CountryCode))
m <- merge(x,y, by.x="Shortcode", by.y="CountryCode", all=TRUE)
x <- read.csv("GDP.csv")
dim(x)
length(intersect(x$Shortcode, y$CountryCode))
m <- merge(x,y, by.x="Shortcode", by.y="CountryCode", all=TRUE)
s <- sort(m, m$GDP,decreasing=TRUE)
?read.csv
x <- read.csv("GDP.csv", colClasses = c("character", "numeric","character","character"))
m <- merge(x,y, by.x="Shortcode", by.y="CountryCode", all=TRUE)
length(intersect(x$Shortcode, y$CountryCode))
s <- sort(m, m$GDP,decreasing=TRUE)
m$GDP
s <- sort(m, m$Ranking,decreasing=TRUE)
m$Ranking
class(m$Ranking)
?sort
s <- sort(m, m$Ranking,decreasing=TRUE, na.last = NA)
s <- sort(m$Ranking, decreasing=TRUE, na.last = NA)
s
o <- m[order(m$Ranking), ]
o
rm(s)
?order
o <- m[order(m$Ranking), decreasing = TRUE]
o <- m[order(m$Ranking, na.last = TRUE, decreasing = TRUE) ]
o <- m[order(m$Ranking, na.last = TRUE, decreasing = TRUE), ]
head(o)
o[1:4]
o[,13]
dim(o)
o[1:2]
o[1:3]
o[1:3, 2]
o[1:3]
?seq
seq(1,length(o),1)
seq(1,nrow(o),1)
o$num <- seq(1,nrow(o),1)
o[1:4]
subset(o, select=c("Ranking", "Economy", "num"))
x <- read.csv("GDP.csv", colClasses = c("character", "numeric","character","character"))
y <- read.csv("EDSTATS_Country.csv")
length(intersect(x$Shortcode, y$CountryCode))
m <- merge(x,y, by.x="Shortcode", by.y="CountryCode", all=TRUE)
o <- m[order(m$Ranking, na.last = TRUE, decreasing = TRUE), ]
o$num <- seq(1,nrow(o),1)
subset(o, select=c("Ranking", "Economy", "num"))
oMelt <- melt(o, id=c("num","Ranking","Economy"), measure.vars=c("GDP") )
library(reshape2)
oMelt <- melt(o, id=c("num","Ranking","Economy"), measure.vars=c("GDP") )
oMelt
oMelt <- melt(o, id=c("num","Ranking","Economy", "IncomeGroup"), measure.vars=c("GDP") )
oMelt
dcast(oMelt, IncomeGroup ~ variable, mean)
?tapply
as.numeric(o$GDP)
?gsub
gsub(",","",o$GDP)
as.numeric(gsub(",","",o$GDP))
o$GDP <- as.numeric(gsub(",","",o$GDP))
o$GDP
class(o$GDP)
library(reshape2)
oMelt <- melt(o, id=c("num","Ranking","Economy", "IncomeGroup"), measure.vars=c("GDP") )
dcast(oMelt, IncomeGroup ~ variable, mean)
?mean
dcast(oMelt, IncomeGroup ~ variable, mean, na.rm=TRUE)
write.csv(o, "a.csv")
library(Hmisc)
m$Income.Groups = cut2(o$Ranking, g=5 )
library(Hmisc)
m$rankGroup = cut2(o$Ranking, g=5 )
table(m$rankGroup, m$IncomeGroup)
190-153
oMelt <- melt(o, id=c("num","Ranking","Economy", "IncomeGroup"), measure.vars=c("Ranking") )
dcast(oMelt, IncomeGroup ~ variable, mean, na.rm=TRUE)
